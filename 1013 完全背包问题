/* Unmodified Version *************************** */
#include <iostream>
using namespace std;
int V, N;
int val[1000], Size[1000];
int DP[1000][10000];
inline int Max(int a, int b){
    return (a > b)? a : b;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);
    cin >> V >> N;
    for(int i=0; i<N; i++)
        cin >> Size[i] >> val[i];
    for(int i=0; i<=N; i++){
        for(int j=0; j<=V; j++){
            if(i == 0 || j == 0){
                DP[i][j] = 0;
                continue;
            }
            for(int k=0; k*Size[i-1] <= j; k++)
                DP[i][j] = Max(DP[i-1][j], DP[i-1][j - k*Size[i-1]] + k*val[i-1]);
        }
    }
    int res = 0;
    for(int i=0; i<=V; i++){
        if(res < DP[N][i])
            res = DP[N][i];
    }
    cout<< res;
    return 0;
}
/* ************************ */
