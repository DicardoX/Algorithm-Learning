#include <iostream>

using namespace std;

int n;
int sum[4];
const int minn = -2000000007;
int plant[100007][3];
int dp[100007][4]; /// 0 - 10; 1,2 - 20; 3 - 30;

void func()
{
    for(int i=1; i<n; i++)
    {
        dp[i][0] = plant[i][0] + max(dp[i-1][1], dp[i-1][3]);
        dp[i][1] = plant[i][1] + dp[i-1][0];
        dp[i][2] = plant[i][1] + dp[i-1][3];
        dp[i][3] = plant[i][2] + max(dp[i-1][2], dp[i-1][0]);
    }
}

int main() {
    cin>>n;
    for(int i=0; i<n; i++)
        cin>>plant[i][0] >> plant[i][1] >> plant[i][2];

    dp[0][0] = plant[0][0];
    dp[0][1] = dp[0][2] = dp[0][3] = minn;
    func();
    sum[0] = max(dp[n-1][1], dp[n-1][3]);

    dp[0][1] = plant[0][1];
    dp[0][0] = dp[0][2] = dp[0][3] = minn;
    func();
    sum[1] = dp[n-1][0];

    dp[0][2] = plant[0][1];
    dp[0][1] = dp[0][0] = dp[0][3] = minn;
    func();
    sum[2] = dp[n-1][3];

    dp[0][3] = plant[0][2];
    dp[0][1] = dp[0][2] = dp[0][0] = minn;
    func();
    sum[3] = max(dp[n-1][0], dp[n-1][2]);

    cout<<max(max(sum[0], sum[1]), max(sum[2], sum[3]));


    return 0;
}
